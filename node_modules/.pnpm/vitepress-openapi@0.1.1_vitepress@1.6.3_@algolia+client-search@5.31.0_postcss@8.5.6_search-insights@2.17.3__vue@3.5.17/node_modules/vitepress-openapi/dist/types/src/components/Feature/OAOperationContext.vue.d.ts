import type { SecurityUi } from '../../types';
declare var __VLS_1: {
    path: any;
    method: any;
    parameters: any;
    operation: any;
    requestBody: any;
    securityUi: SecurityUi;
    servers: any;
    codeSamples: any;
    responses: any;
    operationData: import("../../lib/operationData").OperationData;
};
type __VLS_Slots = {} & {
    default?: (props: typeof __VLS_1) => any;
};
declare const __VLS_component: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    operationId: {
        type: StringConstructor;
        required: true;
    };
    openapi: {
        type: ObjectConstructor;
        required: true;
    };
    shouldBuildRequest: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    operationId: {
        type: StringConstructor;
        required: true;
    };
    openapi: {
        type: ObjectConstructor;
        required: true;
    };
    shouldBuildRequest: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>> & Readonly<{}>, {
    shouldBuildRequest: boolean;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
